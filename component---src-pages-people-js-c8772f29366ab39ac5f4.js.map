{"version":3,"sources":["webpack://mith-static/./src/pages/people.js"],"names":["data","makePerson","person","useWebsite","pageLocation","id","website","startsWith","img","fields","headshot","el","G","image","childImageSharp","gatsbyImageData","alt","name","imgStyle","objectFit","key","new_id","to","className","persName","identities","current_identities","map","identity","department","title","people","group","filter","g","fieldValue","nodes","affiliates"],"mappings":"yKA8IA,UArImB,SAAC,GAAc,IAAZA,EAAW,EAAXA,KAEpB,SAASC,EAAWC,EAAQC,QAAkB,IAAlBA,OAAW,GACrC,IAAIC,EAAeF,EAAOG,GACtBF,IAEAC,EADEF,EAAOI,QACMJ,EAAOI,QAAQC,WAAW,QACrCL,EAAOI,QADI,UAEDJ,EAAOI,QAEN,MAInB,IAAIE,EAAM,GACV,GAAIN,EAAOO,OAAOC,SAAU,CAC1B,IAAMC,EAAK,gBAAC,EAAAC,EAAD,CACTC,MAAOX,EAAOO,OAAOC,SAASI,gBAAgBC,gBAC9CC,IAAG,eAAiBd,EAAOe,KAC3BC,SAAU,CACRC,UAAW,WAGfX,EAAMJ,EACF,gBAAC,KAAD,CAAMgB,IAAG,KAAOlB,EAAOmB,OAAUhB,GAAIH,EAAOmB,OAAQC,GAAIlB,EAAcmB,UAAU,YAAYZ,GAC5FA,EAGN,IAAIa,EAAWpB,EACX,gBAAC,KAAD,CAAMgB,IAAG,KAAOlB,EAAOmB,OAAUhB,GAAIH,EAAOmB,OAAQC,GAAIlB,GAAeF,EAAOe,MAC9Ef,EAAOe,KAEPQ,EAAa,GAcjB,OAbIvB,EAAOwB,qBACTD,EAAavB,EAAOwB,mBAAmBC,KAAI,SAAAC,GACzC,MAAgC,SAAxBA,EAASC,YAAiD,wDAAxBD,EAASC,YAAgG,OAAxBD,EAASC,WAChI,uBAAKN,UAAU,WAAWlB,GAAIuB,EAASvB,GAAIe,IAAG,KAAOQ,EAASvB,IAC9D,wBAAMkB,UAAU,SAASK,EAASE,QAElC,uBAAKP,UAAU,WAAWlB,GAAIuB,EAASvB,GAAIe,IAAG,KAAOQ,EAASvB,IAC9D,wBAAMkB,UAAU,SAASK,EAASE,OAClC,wBAAMP,UAAU,cAAcK,EAASC,iBAM7C,2BAASN,UAAU,SAASlB,GAAIH,EAAOmB,OAAQS,MAAO5B,EAAOe,KAAMG,IAAG,KAAOlB,EAAOmB,QACjFb,EACD,sBAAIe,UAAU,QAAQC,GACrBC,GAiBP,OACA,gBAAC,IAAD,KACI,gBAAC,IAAD,CAAKK,MAAM,WACX,uBAAKP,UAAU,eACb,2BAASA,UAAU,iBACjB,sBAAIA,UAAU,0BAAd,WAEF,2BAASlB,GAAG,WAAWkB,UAAU,gBAC/B,6CACCvB,EAAK+B,OAAOC,MACVC,QAAO,SAAAC,GAAC,MAAqB,UAAjBA,EAAEC,cACdR,KAvBX,SAAmBI,GACjB,OAAOA,EAAOK,MAAMT,KAAI,SAAAzB,GACtB,OAAOD,EAAWC,UAwBhB,2BAASG,GAAG,aAAakB,UAAU,gBACjC,wCACCvB,EAAK+B,OAAOC,MACVC,QAAO,SAAAC,GAAC,MAAqB,eAAjBA,EAAEC,cACdR,KAxBX,SAAwBU,GACtB,OAAOA,EAAWD,MAAMT,KAAI,SAAAzB,GAC1B,OAAOD,EAAWC,GAAQ","file":"component---src-pages-people-js-c8772f29366ab39ac5f4.js","sourcesContent":["import React from 'react'\nimport { graphql, Link } from 'gatsby'\nimport { GatsbyImage } from 'gatsby-plugin-image'\n\nimport Layout from '../components/layout'\nimport SEO from '../components/seo'\n\nimport './people.css'\n\nconst PeoplePage = ({ data }) => { \n\n  function makePerson(person, useWebsite=false) {\n    let pageLocation = person.id\n    if (useWebsite) {\n      if (person.website) {\n        pageLocation = person.website.startsWith('http')\n          ? person.website\n          : `http://${person.website}`\n      } else {\n        pageLocation = null\n      }\n    }\n\n    let img = ''\n    if (person.fields.headshot) {\n      const el = <GatsbyImage \n        image={person.fields.headshot.childImageSharp.gatsbyImageData}\n        alt={`Headshot of ${person.name}`} \n        imgStyle={{\n          objectFit: \"cover\",\n        }}\n      />\n      img = pageLocation\n        ? <Link key={`p-${person.new_id}`} id={person.new_id} to={pageLocation} className=\"headshot\">{el}</Link>\n        : el\n    }\n\n    let persName = pageLocation \n      ? <Link key={`p-${person.new_id}`} id={person.new_id} to={pageLocation}>{person.name}</Link>\n      : person.name\n\n    let identities = ''\n    if (person.current_identities) {\n      identities = person.current_identities.map(identity => {\n        return (identity.department === 'MITH' || identity.department === 'Maryland Institute for Technology in the Humanities' || identity.department === null)\n          ? <div className=\"identity\" id={identity.id} key={`i-${identity.id}`}>\n            <span className=\"title\">{identity.title}</span>\n          </div>\n          : <div className=\"identity\" id={identity.id} key={`i-${identity.id}`}>\n            <span className=\"title\">{identity.title}</span>\n            <span className=\"department\">{identity.department}</span>\n          </div>\n      })\n    }\n\n    return (\n      <article className=\"person\" id={person.new_id} title={person.name} key={`p-${person.new_id}`}>\n        {img}\n        <h3 className=\"name\">{persName}</h3>\n        {identities}\n      </article>\n    )    \n  }\n\n  function makeStaff(people) {    \n    return people.nodes.map(person => {\n      return makePerson(person)\n    })\n  }\n\n  function makeAffiliates(affiliates) {    \n    return affiliates.nodes.map(person => {\n      return makePerson(person, true)\n    })\n  }\n\n  return (\n\t\t<Layout>\n      <SEO title=\"People\" />\n      <div className=\"page-people\">\n        <section className=\"leader hidden\">\n          <h1 className=\"page-title text-hidden\">People</h1>\n        </section>\n        <section id=\"facstaff\" className=\"people-group\">\n          <h2>Faculty &amp; Staff</h2>\n          {data.people.group\n            .filter(g => g.fieldValue === 'Staff')\n            .map(makeStaff)\n          }\n        </section>\n        <section id=\"affiliates\" className=\"people-group\">\n          <h2>Affiliates</h2>\n          {data.people.group\n            .filter(g => g.fieldValue === 'Affiliates')\n            .map(makeAffiliates)\n          }\n        </section>\n      </div>\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query PeopleQuery {\n    people: allPeopleJson(\n      sort: {\n        fields: last\n      }, \n      filter: {\n        group_type: {in: [\"Staff\", \"Affiliates\"]}\n      }\n    ) {\n      group(field: group_type) {\n        fieldValue\n        nodes {\n          id\n          new_id\n          name\n          first\n          last\n          website\n          twitter\n          current_identities {\n            id\n            title\n            department\n            institution\n            person_bio\n          }\n          fields {\n            headshot {\n              childImageSharp {\n                gatsbyImageData(height: 500, width: 500, transformOptions: {fit: COVER}, backgroundColor: \"rgba(255,255,255,0)\")\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\n \nexport default PeoplePage"],"sourceRoot":""}