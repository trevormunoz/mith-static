{"version":3,"sources":["webpack://mith-static/./src/components/supporter-list.js","webpack://mith-static/./src/components/taxonomy-list.js","webpack://mith-static/./src/templates/event.js"],"names":["supporters","type","title","length","charAt","toUpperCase","slice","types","className","map","s","umd","slug","supporter_name","website","startsWith","href","name","target","rel","id","toLowerCase","terms","tax_title","t","term","item","pageContext","subtitle","talk_subtitle","itemProp","talk_title","event_title","header","image","G","localFiles","childImageSharp","gatsbyImageData","alt","description","fields","eventsDescription","dangerouslySetInnerHTML","__html","childMarkdownRemark","html","speakers_list","speakers","speakers_data","p","i","key","person","types_list","sponsors","partners","links_list","links","link_name","l","url","disciplines","methods","research","research_list","research_img","r","src","to","class","news_list","news","posts","n","replace","record_id","post_title","post_date","author_name","itemScope","itemType","start","end","location"],"mappings":"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","file":"component---src-templates-event-js-80ef67dac3328b6be82b.js","sourcesContent":["import React from 'react'\n\nconst SupporterList = ({supporters, type}) => {\n\n  const title = supporters.length > 1 \n    ? `${type.charAt(0).toUpperCase() + type.slice(1)}s`\n    : type.charAt(0).toUpperCase() + type.slice(1)\n  const types = `${type}s`\n\n  return(\n    <div className={`supporters ${types}`}>\n      <h2>{title}</h2>\n      <ul>\n        {supporters.map(s => {\n          const umd = (s.slug !== \"umdlib\" && s.type === \"Internal\") \n            ? \"University of Maryland \" : \"\"\n          const supporter_name = s.website \n            ? s.website.startsWith('http') \n              ? <a href={s.website} title={s.name} target=\"_blank\" rel=\"noreferrer\">{umd}{s.name}</a>\n              : <a href={`http://${s.website}`} title={s.name} target=\"_blank\" rel=\"noreferrer\">{umd}{s.name}</a>\n            : s.name\n          return <li id={s.slug} className={s.type.toLowerCase()}>{supporter_name}</li>\n        })}\n      </ul>\n    </div>\n  )\n}\n\nexport default SupporterList","import React from 'react'\n\nconst TaxonomyList = ({terms, type}) => {\n\n  const tax_title = type ? <h2>{type.charAt(0).toUpperCase() + type.slice(1)}</h2> : ''\n\n  return(\n    <div className={`taxonomy ${type}`}>\n      <h2>{tax_title}</h2>\n      <ul className=\"terms\">\n        {terms.map(t => {\n          return <li className=\"term\">{t.term}</li>\n        })}\n      </ul>\n    </div>\n  )\n}\n\nexport default TaxonomyList","import React from 'react'\nimport { Link } from 'gatsby'\nimport { GatsbyImage } from 'gatsby-plugin-image'\n\nimport Layout from '../components/layout'\nimport SEO from '../components/seo'\nimport EventTime from '../components/event-time'\nimport Person from '../components/person'\nimport TaxonomyList from '../components/taxonomy-list'\nimport SupporterList from '../components/supporter-list'\n\nimport './event.css'\n\nconst Event = ({ pageContext: item }) => {\n  \n  const subtitle = item.talk_subtitle \n    ? <h2 className=\"subtitle\">{item.talk_subtitle}</h2> : ''\n  const title = <h1 className=\"title\" itemProp=\"name\">{item.talk_title || item.event_title}</h1>\n  \n  const header = item.image\n    ? <GatsbyImage \n      image={item.image.localFiles[0].childImageSharp.gatsbyImageData} \n      alt={item.event_title} \n      className=\"event-image\" \n    /> : <div className=\"header\">{title}{subtitle}</div>\n    \n  const description = item.fields.eventsDescription \n    ? <div className=\"description\" \n      dangerouslySetInnerHTML={{ __html: item.fields.eventsDescription.childMarkdownRemark.html }} \n    /> : ''\n  \n  let speakers_list = null\n  let speakers = null\n  const speakers_data = item.speakers ? item.speakers : []\n  if (item.speakers.length > 0) {\n    speakers_list = speakers_data.map((p, i) => {\n      return <Person key={`p${i}`} person={p} type=\"speaker\" />\n    })\n    speakers = <div className=\"speakers-wrapper\">\n      <h2>Speakers</h2>\n      <div className=\"speakers\">{speakers_list}</div>\n    </div>\n  }\n\n  let types = null\n  let types_list = null \n  if (item.type) {\n    types_list = item.type.map(t => {\n      return <span className=\"pill event-type\" key={`t${t}`}>{t}</span>\n    })\n    types = <span className=\"event-types\">{types_list}</span>\n  }\n\n  const sponsors = item.sponsors.length > 0 \n    ? <SupporterList supporters={item.sponsors} type=\"sponsor\" />\n    : ''\n  const partners = item.partners.length > 0 \n    ? <SupporterList supporters={item.partners} type=\"partner\" />\n    : ''\n  \n  let links_list = null\n  let links = null\n  let link_name = null\n  if (item.links.length > 0) {\n    links_list = item.links.map(l => {\n        if (l.url) {\n          link_name = l.url.startsWith('http') \n            ? <a href={l.url} rel=\"noreferrer\">{l.title}</a>\n            : <a href={`http://${l.url}`} title={l.title} target=\"_blank\" rel=\"noreferrer\">{l.title}</a>\n        } else {\n          link_name = l.title\n        }\n      return <li className={l.type}>{link_name}</li>\n    })\n    links = <div className=\"links\">\n      <h2>Resources</h2>\n      <ul>{links_list}</ul>\n    </div>\n  }\n\n  const disciplines = item.disciplines.length > 0 \n  ? <TaxonomyList terms={item.disciplines} type=\"disciplines\" />\n  : ''\n\n  const methods = item.methods.length > 0 \n  ? <TaxonomyList terms={item.methods} type=\"methods\" />\n  : ''\n\n  let research = null\n  let research_list = null\n  let research_img = null\n  if (item.research.length > 0) {\n    research_list = item.research.map(r => {\n      if (r.image) {\n        if (r.image.childImageSharp) {\n          research_img = <GatsbyImage\n            image={r.image.childImageSharp.gatsbyImageData}\n            alt={r.title}\n            className=\"related-research-item\"\n          />\n        } else {\n          research_img = <img\n            src={r.image.url}\n            alt={r.title}\n            className=\"related-research-item\"\n          />\n        }\n        return <Link className=\"related-research-item\" to={`../../research/${r.id}`}>{research_img}</Link>\n      } else {\n        return <Link className=\"related-research-item\" to={`../../research/${r.id}`}>{r.title}</Link>\n      }\n    })\n    research = <div class=\"related-research\">\n        <h2>Related Research</h2>\n        {research_list}\n      </div>\n  }\n  let news_list = null \n  let news = null\n  if (item.posts.length > 0) {\n    news_list = item.posts.map(n => {\n      return <li id={n.slug.toLowerCase().replace(/-/g, '_')}>\n        <div className=\"post-title\"><Link key={`n-${n.record_id}`} to={`../../news/${n.slug}`}>{n.post_title}</Link></div>\n        <div className=\"meta\">\n          <time className=\"post-date\">{n.post_date}</time>\n          <div className=\"author hidden\">{n.author_name}</div>\n        </div>\n      </li>\n    })\n    news = <div className=\"news\"><h2>News</h2><ul>{news_list}</ul></div>\n  }\n\n  return (\n    <Layout>\n      <SEO title={item.title} />\n      <div className=\"page-event\">\n        <section className=\"event\" itemProp=\"event\" itemScope itemType=\"https://schema.org/Event\">\n          {header}\n          <div className=\"content\">\n            <div className=\"metadata\">\n              <EventTime start={item.start} end={item.end} />\n              <div itemProp=\"location\" className=\"location\">{item.location}</div>\n            </div>\n            {description}\n            {speakers}\n          </div>\n          <div className=\"sidebar\">\n            {types}\n            {links}\n            {sponsors}\n            {partners}\n            {news}\n            {research}\n          </div>\n        </section>\n      </div>\n    </Layout>\n  )\n}\n\nexport default Event\n"],"sourceRoot":""}